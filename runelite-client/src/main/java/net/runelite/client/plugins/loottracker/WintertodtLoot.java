/*
 * Copyright (c) 2018, Tyler Nichols <tnichols@udel.edu>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package net.runelite.client.plugins.loottracker;

import net.runelite.api.ItemID;
import java.util.Arrays;

// Loot is according to RS wiki [http://oldschoolrunescape.wikia.com/wiki/Wintertodt]
public enum WintertodtLoot
{
	DRAGON_AXE(ItemID.DRAGON_AXE),
	PHEONIX(ItemID.PHOENIX),
	PYROMANCER_GARB(ItemID.PYROMANCER_GARB),
	PYROMANCER_ROBE(ItemID.PYROMANCER_ROBE),
	PYROMANCER_HOOD(ItemID.PYROMANCER_HOOD),
	PYROMANCER_BOOTS(ItemID.PYROMANCER_BOOTS),
	WARM_GLOVES(ItemID.WARM_GLOVES),
	BRUMA_TORCH(ItemID.BRUMA_TORCH),
	TOME_OF_FIRE(ItemID.TOME_OF_FIRE),
	TOME_OF_FIRE_EMPTY(ItemID.TOME_OF_FIRE_EMPTY),
	BURNT_PAGE(ItemID.BURNT_PAGE),

	COINS(ItemID.COINS),
	SALTPETRE(ItemID.SALTPETRE),
	DYNAMITE(ItemID.DYNAMITE),
	LIMESTONE_BRICK(ItemID.LIMESTONE_BRICK),
	PURE_ESSENCE(ItemID.PURE_ESSENCE),

	LOGS(ItemID.LOGS),
	OAK_LOGS(ItemID.OAK_LOGS),
	WILLOW_LOGS(ItemID.WILLOW_LOGS),
	MAPLE_LOGS(ItemID.MAPLE_LOGS),
	TEAK_LOGS(ItemID.TEAK_LOGS),
	MAHOGANY_LOGS(ItemID.MAHOGANY_LOGS),
	YEW_LOGS(ItemID.YEW_LOGS),
	MAGIC_LOGS(ItemID.MAGIC_LOGS),

	GRIMY_GUAM_LEAF(ItemID.GRIMY_GUAM_LEAF),
	GRIMY_MARRENTILL(ItemID.GRIMY_MARRENTILL),
	GRIMY_HARRALANDER(ItemID.GRIMY_HARRALANDER),
	GRIMY_RANNAR_WEED(ItemID.GRIMY_RANARR_WEED),
	GRIMY_AVANTOE(ItemID.GRIMY_AVANTOE),
	GRIMY_KWUARM(ItemID.GRIMY_KWUARM),
	GRIMY_CADANTINE(ItemID.GRIMY_CADANTINE),
	GRIMY_TORSTOL(ItemID.GRIMY_TORSTOL),

	RAW_ANCHOVIES(ItemID.RAW_ANCHOVIES),
	RAW_TROUT(ItemID.RAW_TROUT),
	RAW_SALMON(ItemID.RAW_SALMON),
	RAW_LOBSTER(ItemID.RAW_LOBSTER),
	RAW_SWORDFISH(ItemID.RAW_SWORDFISH),
	RAW_SHARK(ItemID.RAW_SHARK),

	UNCUT_SAPPHIRE(ItemID.UNCUT_SAPPHIRE),
	UNCUT_EMERALD(ItemID.UNCUT_EMERALD),
	UNCUT_RUBY(ItemID.UNCUT_RUBY),
	UNCUT_DIAMOND(ItemID.UNCUT_DIAMOND),

	IRON_ORE(ItemID.IRON_ORE),
	SILVER_ORE(ItemID.SILVER_ORE),
	COAL(ItemID.COAL),
	GOLD_ORE(ItemID.GOLD_ORE),
	MITHRIL_ORE(ItemID.MITHRIL_ORE),
	ADAMANTITE_ORE(ItemID.ADAMANTITE_ORE),
	RUNITE_ORE(ItemID.RUNITE_ORE),

	WATERMELON_SEED(ItemID.WATERMELON_SEED),
	TARROMIN_SEED(ItemID.TARROMIN_SEED),
	HARRALANDER_SEED(ItemID.HARRALANDER_SEED),
	RANNAR_SEED(ItemID.RANARR_SEED),
	TOADFLAX_SEED(ItemID.TOADFLAX_SEED),
	AVANTOE_SEED(ItemID.AVANTOE_SEED),
	SNAPDRAGON_SEED(ItemID.SNAPDRAGON_SEED),
	DWARF_WEED_SEED(ItemID.DWARF_WEED_SEED),
	ACORN(ItemID.ACORN),
	WILLOW_SEED(ItemID.WILLOW_SEED),
	BANANA_TREE_SEED(ItemID.BANANA_TREE_SEED),
	TEAK_SEED(ItemID.TEAK_SEED),
	MAPLE_SEED(ItemID.MAPLE_SEED),
	MAHOGANY_SEED(ItemID.MAHOGANY_SEED),
	TORSTOL_SEED(ItemID.TORSTOL_SEED),
	YEW_SEED(ItemID.YEW_SEED),
	MAGIC_SEED(ItemID.MAGIC_SEED),
	SPIRIT_SEED(ItemID.SPIRIT_SEED);

	private final int itemID;

	WintertodtLoot(int itemID)
	{
		this.itemID = itemID;
	}

	public static boolean isWintertodtLoot(Integer item)
	{
		return Arrays.stream(WintertodtLoot.values()).anyMatch(enumItem -> enumItem.itemID == item);
	}
}
